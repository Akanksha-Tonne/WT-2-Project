{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_crash_course\\\\frontend\\\\src\\\\components\\\\displayWorkers.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nclass DisplayWorkers extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: []\n    };\n\n    this.refreshData = () => {\n      axios.get(\"http://localhost:8000/worker/\").then(response => {\n        this.setState({\n          data: response.data\n        });\n        console.log(\"data received\");\n        console.log(response.data);\n      }).catch(error => {\n        console.log(error.data);\n      });\n    };\n\n    this.componentWillMount = () => {\n      console.log(\"did mount\");\n      this.refreshData();\n    };\n\n    this.componentDidMount = () => {\n      this.refreshData();\n    };\n\n    this.renderData = () => {\n      return this.state.data.map(item => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card\",\n          style: {\n            width: \"18em\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: item.photo,\n          alt: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }\n        }));\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }\n    }, this.renderData());\n  }\n\n}\n\nexport default DisplayWorkers;","map":{"version":3,"sources":["D:/react_crash_course/frontend/src/components/displayWorkers.jsx"],"names":["React","Component","axios","DisplayWorkers","state","data","refreshData","get","then","response","setState","console","log","catch","error","componentWillMount","componentDidMount","renderData","map","item","width","photo","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,kCAAP;;AAEA,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCG,KADqC,GAC7B;AACNC,MAAAA,IAAI,EAAE;AADA,KAD6B;;AAAA,SAIrCC,WAJqC,GAIvB,MAAM;AAClBJ,MAAAA,KAAK,CACFK,GADH,CACO,+BADP,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,aAAKC,QAAL,CAAc;AAAEL,UAAAA,IAAI,EAAEI,QAAQ,CAACJ;AAAjB,SAAd;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACJ,IAArB;AACD,OANH,EAOGQ,KAPH,CAOUC,KAAD,IAAW;AAChBH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACT,IAAlB;AACD,OATH;AAUD,KAfoC;;AAAA,SAgBrCU,kBAhBqC,GAgBhB,MAAM;AACzBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,WAAKN,WAAL;AACD,KAnBoC;;AAAA,SAoBrCU,iBApBqC,GAoBjB,MAAM;AACxB,WAAKV,WAAL;AACD,KAtBoC;;AAAA,SAuBrCW,UAvBqC,GAuBxB,MAAM;AACjB,aAAO,KAAKb,KAAL,CAAWC,IAAX,CAAgBa,GAAhB,CAAqBC,IAAD,IAAU;AACnC,4BACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAsB,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAE;AAAR,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAK,UAAA,GAAG,EAAED,IAAI,CAACE,KAAf;AAAsB,UAAA,GAAG,EAAC,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADF;AAKD,OANM,CAAP;AAOD,KA/BoC;AAAA;;AAgCrCC,EAAAA,MAAM,GAAG;AACP,wBAAO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiB,KAAKL,UAAL,EAAjB,CAAP;AACD;;AAlCoC;;AAqCvC,eAAed,cAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nclass DisplayWorkers extends Component {\r\n  state = {\r\n    data: [],\r\n  };\r\n  refreshData = () => {\r\n    axios\r\n      .get(\"http://localhost:8000/worker/\")\r\n      .then((response) => {\r\n        this.setState({ data: response.data });\r\n        console.log(\"data received\");\r\n        console.log(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.data);\r\n      });\r\n  };\r\n  componentWillMount = () => {\r\n    console.log(\"did mount\");\r\n    this.refreshData();\r\n  };\r\n  componentDidMount = () => {\r\n    this.refreshData();\r\n  };\r\n  renderData = () => {\r\n    return this.state.data.map((item) => {\r\n      return (\r\n        <div className=\"card\" style={{width: \"18em\"}} >\r\n            <img src={item.photo} alt=\"\"/>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  render() {\r\n    return <React.Fragment>{this.renderData()}</React.Fragment>;\r\n  }\r\n}\r\n\r\nexport default DisplayWorkers;\r\n"]},"metadata":{},"sourceType":"module"}